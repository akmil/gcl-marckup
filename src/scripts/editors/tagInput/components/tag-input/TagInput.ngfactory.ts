/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './TagInput';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/forms/src/form_builder';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/forms/src/directives/control_value_accessor';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from './styles.scss.shim';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '@angular/common/src/directives/ng_for';
import * as import16 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import17 from '@angular/forms/src/directives/ng_control_status';
import * as import18 from '@angular/forms/src/directives/default_value_accessor';
import * as import19 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import20 from '@angular/common/src/directives/ng_if';
import * as import21 from '@angular/core/src/linker/template_ref';
import * as import22 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import23 from '@angular/forms/src/directives/ng_control';
import * as import24 from '@angular/forms/src/directives/control_container';
import * as import25 from '../tag-input-item/TagInputItemComponent';
import * as import26 from '../tag-input-item/TagInputItemComponent.ngfactory';
import * as import27 from '../tag-input-autocomplete/TagInputAutocompleteComponent';
import * as import28 from '../tag-input-autocomplete/TagInputAutocompleteComponent.ngfactory';
var renderType_TagInputComponent_Host:import0.RenderComponentType = (null as any);
class _View_TagInputComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TagInputComponent_0_4:import3.TagInputComponent;
  __NG_VALUE_ACCESSOR_0_5:any[];
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputComponent_Host0,renderType_TagInputComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_5():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_5 == (null as any))) { (this.__NG_VALUE_ACCESSOR_0_5 = [this._TagInputComponent_0_4]); }
    return this.__NG_VALUE_ACCESSOR_0_5;
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('rl-tag-input',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TagInputComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TagInputComponent_0_4 = new import3.TagInputComponent(this.parentInjector.get(import8.FormBuilder),new import9.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._TagInputComponent_0_4,[],compView_0);
    compView_0.create(this._TagInputComponent_0_4,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listenGlobal('document','click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[disposable_0],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.TagInputComponent) && (0 === requestNodeIndex))) { return this._TagInputComponent_0_4; }
    if (((token === import10.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._TagInputComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this._TagInputComponent_0_4.isFocused;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'ng2-tag-input-focus',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._TagInputComponent_0_4.ngOnDestroy();
  }
  private _handle_click_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._TagInputComponent_0_4.onDocumentClick($event,$event.target)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_TagInputComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_TagInputComponent_Host === (null as any))) { (renderType_TagInputComponent_Host = viewUtils.createRenderComponentType('',0,import11.ViewEncapsulation.None,[],{})); }
  return new _View_TagInputComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TagInputComponentNgFactory:import12.ComponentFactory<import3.TagInputComponent> = new import12.ComponentFactory<import3.TagInputComponent>('rl-tag-input',viewFactory_TagInputComponent_Host0,import3.TagInputComponent);
const styles_TagInputComponent:any[] = [import13.styles];
var renderType_TagInputComponent:import0.RenderComponentType = (null as any);
class _View_TagInputComponent0 extends import1.AppView<import3.TagInputComponent> {
  _viewQuery_tagInputElement_0:import14.QueryList<any>;
  _anchor_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TemplateRef_0_5:any;
  _NgFor_0_6:import15.NgFor;
  _text_1:any;
  _el_2:any;
  _FormGroupDirective_2_3:import16.FormGroupDirective;
  _ControlContainer_2_4:any;
  _NgControlStatusGroup_2_5:import17.NgControlStatusGroup;
  _text_3:any;
  _el_4:any;
  _DefaultValueAccessor_4_3:import18.DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _FormControlName_4_5:import19.FormControlName;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import17.NgControlStatus;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _appEl_6:import2.AppElement;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import20.NgIf;
  _text_7:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputComponent0,renderType_TagInputComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_tagInputElement_0 = new import14.QueryList<any>();
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import21.TemplateRef_(this._appEl_0,viewFactory_TagInputComponent1);
    this._NgFor_0_6 = new import15.NgFor(this._appEl_0.vcRef,this._TemplateRef_0_5,this.parentInjector.get(import22.IterableDiffers),this.ref);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_2 = this.renderer.createElement(parentRenderNode,'form',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','ng2-tag-input-form');
    this._FormGroupDirective_2_3 = new import16.FormGroupDirective((null as any),(null as any));
    this._ControlContainer_2_4 = this._FormGroupDirective_2_3;
    this._NgControlStatusGroup_2_5 = new import17.NgControlStatusGroup(this._ControlContainer_2_4);
    this._text_3 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'input',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','ng2-tag-input-field');
    this.renderer.setElementAttribute(this._el_4,'formControlName','tagInputField');
    this.renderer.setElementAttribute(this._el_4,'type','text');
    this._DefaultValueAccessor_4_3 = new import18.DefaultValueAccessor(this.renderer,new import9.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._DefaultValueAccessor_4_3];
    this._FormControlName_4_5 = new import19.FormControlName(this._ControlContainer_2_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._FormControlName_4_5;
    this._NgControlStatus_4_7 = new import17.NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(this._el_2,'\n\n  ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._appEl_6 = new import2.AppElement(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import21.TemplateRef_(this._appEl_6,viewFactory_TagInputComponent2);
    this._NgIf_6_6 = new import20.NgIf(this._appEl_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_2,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_2,'submit',this.eventHandler(this._handle_submit_2_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_2,'reset',this.eventHandler(this._handle_reset_2_1.bind(this)));
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_16 = import7.UNINITIALIZED;
    var disposable_2:Function = this.renderer.listen(this._el_4,'paste',this.eventHandler(this._handle_paste_4_0.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_4,'keydown',this.eventHandler(this._handle_keydown_4_1.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_4,'blur',this.eventHandler(this._handle_blur_4_2.bind(this)));
    var disposable_5:Function = this.renderer.listen(this._el_4,'focus',this.eventHandler(this._handle_focus_4_3.bind(this)));
    var disposable_6:Function = this.renderer.listen(this._el_4,'input',this.eventHandler(this._handle_input_4_4.bind(this)));
    this._expr_17 = import7.UNINITIALIZED;
    this._expr_18 = import7.UNINITIALIZED;
    this._expr_19 = import7.UNINITIALIZED;
    this._expr_20 = import7.UNINITIALIZED;
    this._expr_21 = import7.UNINITIALIZED;
    this._expr_22 = import7.UNINITIALIZED;
    this._expr_23 = import7.UNINITIALIZED;
    this._expr_24 = import7.UNINITIALIZED;
    this._viewQuery_tagInputElement_0.reset([new import9.ElementRef(this._el_4)]);
    this.context.tagInputElement = this._viewQuery_tagInputElement_0.first;
    this.init([],[
      this._anchor_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._anchor_6,
      this._text_7
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import15.NgFor) && (0 === requestNodeIndex))) { return this._NgFor_0_6; }
    if (((token === import18.DefaultValueAccessor) && (4 === requestNodeIndex))) { return this._DefaultValueAccessor_4_3; }
    if (((token === import10.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import19.FormControlName) && (4 === requestNodeIndex))) { return this._FormControlName_4_5; }
    if (((token === import23.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import17.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7; }
    if (((token === import21.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import20.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6; }
    if (((token === import16.FormGroupDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._FormGroupDirective_2_3; }
    if (((token === import24.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._ControlContainer_2_4; }
    if (((token === import17.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgControlStatusGroup_2_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.context.tagsList;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_0_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    if ((changes !== (null as any))) { this._NgFor_0_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_0_6.ngDoCheck(); }
    changes = (null as any);
    const currVal_3:any = this.context.tagInputForm;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._FormGroupDirective_2_3.form = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['form'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._FormGroupDirective_2_3.ngOnChanges(changes); }
    changes = (null as any);
    const currVal_17:any = 'tagInputField';
    if (import4.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this._FormControlName_4_5.name = currVal_17;
      if ((changes === (null as any))) { (changes = {}); }
      changes['name'] = new import7.SimpleChange(this._expr_17,currVal_17);
      this._expr_17 = currVal_17;
    }
    if ((changes !== (null as any))) { this._FormControlName_4_5.ngOnChanges(changes); }
    const currVal_24:any = this.context.showAutocomplete();
    if (import4.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this._NgIf_6_6.ngIf = currVal_24;
      this._expr_24 = currVal_24;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_4:any = this._NgControlStatusGroup_2_5.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_2,'ng-untouched',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._NgControlStatusGroup_2_5.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_2,'ng-touched',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._NgControlStatusGroup_2_5.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_2,'ng-pristine',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._NgControlStatusGroup_2_5.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_2,'ng-dirty',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._NgControlStatusGroup_2_5.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_2,'ng-valid',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this._NgControlStatusGroup_2_5.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_2,'ng-invalid',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_16:any = this.context.placeholder;
    if (import4.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_4,'placeholder',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_18:any = this._NgControlStatus_4_7.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementClass(this._el_4,'ng-untouched',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = this._NgControlStatus_4_7.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_4,'ng-touched',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this._NgControlStatus_4_7.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementClass(this._el_4,'ng-pristine',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this._NgControlStatus_4_7.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementClass(this._el_4,'ng-dirty',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this._NgControlStatus_4_7.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementClass(this._el_4,'ng-valid',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this._NgControlStatus_4_7.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementClass(this._el_4,'ng-invalid',currVal_23);
      this._expr_23 = currVal_23;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_4_5.ngOnDestroy();
  }
  private _handle_submit_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._FormGroupDirective_2_3.onSubmit()) !== false);
    return (true && pd_0);
  }
  private _handle_reset_2_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._FormGroupDirective_2_3.onReset()) !== false);
    return (true && pd_0);
  }
  private _handle_paste_4_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onInputPaste($event)) !== false);
    return (true && pd_0);
  }
  private _handle_keydown_4_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onKeydown($event)) !== false);
    return (true && pd_0);
  }
  private _handle_blur_4_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onInputBlurred($event)) !== false);
    const pd_1:any = ((<any>this._DefaultValueAccessor_4_3.onTouched()) !== false);
    return ((true && pd_0) && pd_1);
  }
  private _handle_focus_4_3($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onInputFocused()) !== false);
    return (true && pd_0);
  }
  private _handle_input_4_4($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_4_3.onChange($event.target.value)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_TagInputComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.TagInputComponent> {
  if ((renderType_TagInputComponent === (null as any))) { (renderType_TagInputComponent = viewUtils.createRenderComponentType('',0,import11.ViewEncapsulation.Emulated,styles_TagInputComponent,{})); }
  return new _View_TagInputComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_TagInputComponent1 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TagInputItemComponent_0_4:import25.TagInputItemComponent;
  _text_1:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputComponent1,renderType_TagInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'rl-tag-input-item',(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import26.viewFactory_TagInputItemComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TagInputItemComponent_0_4 = new import25.TagInputItemComponent();
    this._appEl_0.initComponent(this._TagInputItemComponent_0_4,[],compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n',(null as any));
    compView_0.create(this._TagInputItemComponent_0_4,[],(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'tagRemoved',this.eventHandler(this._handle_tagRemoved_0_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    const subscription_0:any = this._TagInputItemComponent_0_4.tagRemoved.subscribe(this.eventHandler(this._handle_tagRemoved_0_0.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[disposable_0],[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import25.TagInputItemComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._TagInputItemComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = (this.parent.context.selectedTag === this.context.index);
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._TagInputItemComponent_0_4.selected = currVal_1;
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._TagInputItemComponent_0_4.text = currVal_2;
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.context.index;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._TagInputItemComponent_0_4.index = currVal_3;
      this._expr_3 = currVal_3;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_4:any = this._TagInputItemComponent_0_4.isSelected;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_0,'ng2-tag-input-item-selected',currVal_4);
      this._expr_4 = currVal_4;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_tagRemoved_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context._removeTag($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_TagInputComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_TagInputComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_TagInputComponent2 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TagInputAutocompleteComponent_2_4:import27.TagInputAutocompleteComponent;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputComponent2,renderType_TagInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','rl-tag-input-autocomplete-container');
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'rl-tag-input-autocomplete',(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._el_2);
    var compView_2:any = import28.viewFactory_TagInputAutocompleteComponent0(this.viewUtils,this.injector(2),this._appEl_2);
    this._TagInputAutocompleteComponent_2_4 = new import27.TagInputAutocompleteComponent(new import9.ElementRef(this._el_2));
    this._appEl_2.initComponent(this._TagInputAutocompleteComponent_2_4,[],compView_2);
    this._text_3 = this.renderer.createText((null as any),'\n    ',(null as any));
    compView_2.create(this._TagInputAutocompleteComponent_2_4,[],(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_2,'itemSelected',this.eventHandler(this._handle_itemSelected_2_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_2,'enterPressed',this.eventHandler(this._handle_enterPressed_2_1.bind(this)));
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    const subscription_0:any = this._TagInputAutocompleteComponent_2_4.itemSelected.subscribe(this.eventHandler(this._handle_itemSelected_2_0.bind(this)));
    const subscription_1:any = this._TagInputAutocompleteComponent_2_4.enterPressed.subscribe(this.eventHandler(this._handle_enterPressed_2_1.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,[
      subscription_0,
      subscription_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import27.TagInputAutocompleteComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._TagInputAutocompleteComponent_2_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_2:any = this.parent.context.autocompleteResults;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._TagInputAutocompleteComponent_2_4.items = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['items'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.parent.context.autocompleteSelectFirstItem;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._TagInputAutocompleteComponent_2_4.selectFirstItem = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['selectFirstItem'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._TagInputAutocompleteComponent_2_4.ngOnChanges(changes); }
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._TagInputAutocompleteComponent_2_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._TagInputAutocompleteComponent_2_4.ngOnDestroy();
  }
  private _handle_itemSelected_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.onAutocompleteSelect($event)) !== false);
    return (true && pd_0);
  }
  private _handle_enterPressed_2_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.onAutocompleteEnter($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_TagInputComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_TagInputComponent2(viewUtils,parentInjector,declarationEl);
}