/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./TagInputItemComponent');
var import4 = require('@angular/core/src/linker/view_utils');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('@angular/core/src/metadata/view');
var import9 = require('@angular/core/src/linker/component_factory');
var import10 = require('./styles.scss.shim');
var renderType_TagInputItemComponent_Host = null;
var _View_TagInputItemComponent_Host0 = (function (_super) {
    __extends(_View_TagInputItemComponent_Host0, _super);
    function _View_TagInputItemComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TagInputItemComponent_Host0, renderType_TagInputItemComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TagInputItemComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('rl-tag-input-item', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_TagInputItemComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TagInputItemComponent_0_4 = new import3.TagInputItemComponent();
        this._appEl_0.initComponent(this._TagInputItemComponent_0_4, [], compView_0);
        compView_0.create(this._TagInputItemComponent_0_4, this.projectableNodes, null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_TagInputItemComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.TagInputItemComponent) && (0 === requestNodeIndex))) {
            return this._TagInputItemComponent_0_4;
        }
        return notFoundResult;
    };
    _View_TagInputItemComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._TagInputItemComponent_0_4.isSelected;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_0, 'ng2-tag-input-item-selected', currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_TagInputItemComponent_Host0;
}(import1.AppView));
function viewFactory_TagInputItemComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TagInputItemComponent_Host === null)) {
        (renderType_TagInputItemComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_TagInputItemComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.TagInputItemComponentNgFactory = new import9.ComponentFactory('rl-tag-input-item', viewFactory_TagInputItemComponent_Host0, import3.TagInputItemComponent);
var styles_TagInputItemComponent = [import10.styles];
var renderType_TagInputItemComponent = null;
var _View_TagInputItemComponent0 = (function (_super) {
    __extends(_View_TagInputItemComponent0, _super);
    function _View_TagInputItemComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TagInputItemComponent0, renderType_TagInputItemComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_TagInputItemComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'span', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'ng2-tag-input-remove');
        this._text_2 = this.renderer.createText(this._el_1, 'Ã—', null);
        this._text_3 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this._expr_0 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_1, 'click', this.eventHandler(this._handle_click_1_0.bind(this)));
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3
        ], [disposable_0], []);
        return null;
    };
    _View_TagInputItemComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.context.text, '\n');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_TagInputItemComponent0.prototype._handle_click_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.removeTag() !== false);
        return (true && pd_0);
    };
    return _View_TagInputItemComponent0;
}(import1.AppView));
function viewFactory_TagInputItemComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TagInputItemComponent === null)) {
        (renderType_TagInputItemComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.Emulated, styles_TagInputItemComponent, {}));
    }
    return new _View_TagInputItemComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_TagInputItemComponent0 = viewFactory_TagInputItemComponent0;
//# sourceMappingURL=TagInputItemComponent.ngfactory.js.map