/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './TagInputItemComponent';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './styles.scss.shim';
var renderType_TagInputItemComponent_Host:import0.RenderComponentType = (null as any);
class _View_TagInputItemComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TagInputItemComponent_0_4:import3.TagInputItemComponent;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputItemComponent_Host0,renderType_TagInputItemComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('rl-tag-input-item',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TagInputItemComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TagInputItemComponent_0_4 = new import3.TagInputItemComponent();
    this._appEl_0.initComponent(this._TagInputItemComponent_0_4,[],compView_0);
    compView_0.create(this._TagInputItemComponent_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.TagInputItemComponent) && (0 === requestNodeIndex))) { return this._TagInputItemComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._TagInputItemComponent_0_4.isSelected;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'ng2-tag-input-item-selected',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TagInputItemComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_TagInputItemComponent_Host === (null as any))) { (renderType_TagInputItemComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_TagInputItemComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TagInputItemComponentNgFactory:import9.ComponentFactory<import3.TagInputItemComponent> = new import9.ComponentFactory<import3.TagInputItemComponent>('rl-tag-input-item',viewFactory_TagInputItemComponent_Host0,import3.TagInputItemComponent);
const styles_TagInputItemComponent:any[] = [import10.styles];
var renderType_TagInputItemComponent:import0.RenderComponentType = (null as any);
class _View_TagInputItemComponent0 extends import1.AppView<import3.TagInputItemComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TagInputItemComponent0,renderType_TagInputItemComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'span',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','ng2-tag-input-remove');
    this._text_2 = this.renderer.createText(this._el_1,'Ã—',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'',this.context.text,'\n');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.removeTag()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_TagInputItemComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.TagInputItemComponent> {
  if ((renderType_TagInputItemComponent === (null as any))) { (renderType_TagInputItemComponent = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.Emulated,styles_TagInputItemComponent,{})); }
  return new _View_TagInputItemComponent0(viewUtils,parentInjector,declarationEl);
}