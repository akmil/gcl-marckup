/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./ConfirmDataChange');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('@angular/http/src/http');
var import9 = require('../../../services/LocalizationService');
var import10 = require('../../../services/UserInformationService');
var import11 = require('@angular/router/src/router');
var import12 = require('@angular/core/src/metadata/view');
var import13 = require('@angular/core/src/linker/component_factory');
var renderType_ConfirmDataChange_Host = null;
var _View_ConfirmDataChange_Host0 = (function (_super) {
    __extends(_View_ConfirmDataChange_Host0, _super);
    function _View_ConfirmDataChange_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ConfirmDataChange_Host0, renderType_ConfirmDataChange_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ConfirmDataChange_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('confirm-data-change', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ConfirmDataChange0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ConfirmDataChange_0_4 = new import3.ConfirmDataChange(this.parentInjector.get(import8.Http), this.parentInjector.get(import9.LocalizationService), this.parentInjector.get(import10.UserInformationService), this.parentInjector.get(import11.Router));
        this._appEl_0.initComponent(this._ConfirmDataChange_0_4, [], compView_0);
        compView_0.create(this._ConfirmDataChange_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ConfirmDataChange_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.ConfirmDataChange) && (0 === requestNodeIndex))) {
            return this._ConfirmDataChange_0_4;
        }
        return notFoundResult;
    };
    return _View_ConfirmDataChange_Host0;
}(import1.AppView));
function viewFactory_ConfirmDataChange_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ConfirmDataChange_Host === null)) {
        (renderType_ConfirmDataChange_Host = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {}));
    }
    return new _View_ConfirmDataChange_Host0(viewUtils, parentInjector, declarationEl);
}
exports.ConfirmDataChangeNgFactory = new import13.ComponentFactory('confirm-data-change', viewFactory_ConfirmDataChange_Host0, import3.ConfirmDataChange);
var styles_ConfirmDataChange = [];
var renderType_ConfirmDataChange = null;
var _View_ConfirmDataChange0 = (function (_super) {
    __extends(_View_ConfirmDataChange0, _super);
    function _View_ConfirmDataChange0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ConfirmDataChange0, renderType_ConfirmDataChange, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ConfirmDataChange0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.init([], [this._el_0], [], []);
        return null;
    };
    return _View_ConfirmDataChange0;
}(import1.AppView));
function viewFactory_ConfirmDataChange0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ConfirmDataChange === null)) {
        (renderType_ConfirmDataChange = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, styles_ConfirmDataChange, {}));
    }
    return new _View_ConfirmDataChange0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_ConfirmDataChange0 = viewFactory_ConfirmDataChange0;
//# sourceMappingURL=ConfirmDataChange.ngfactory.js.map