/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './NewsVideoPopup';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/security';
var renderType_NewsVideoPopup_Host:import0.RenderComponentType = (null as any);
class _View_NewsVideoPopup_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _NewsVideoPopup_0_4:import3.NewsVideoPopup;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NewsVideoPopup_Host0,renderType_NewsVideoPopup_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('news-video-popup',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_NewsVideoPopup0(this.viewUtils,this.injector(0),this._appEl_0);
    this._NewsVideoPopup_0_4 = new import3.NewsVideoPopup(compView_0.ref,this.parentInjector.get(import8.DomSanitizer));
    this._appEl_0.initComponent(this._NewsVideoPopup_0_4,[],compView_0);
    compView_0.create(this._NewsVideoPopup_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.NewsVideoPopup) && (0 === requestNodeIndex))) { return this._NewsVideoPopup_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._NewsVideoPopup_0_4.ngAfterViewInit(); } }
  }
}
function viewFactory_NewsVideoPopup_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_NewsVideoPopup_Host === (null as any))) { (renderType_NewsVideoPopup_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_NewsVideoPopup_Host0(viewUtils,parentInjector,declarationEl);
}
export const NewsVideoPopupNgFactory:import10.ComponentFactory<import3.NewsVideoPopup> = new import10.ComponentFactory<import3.NewsVideoPopup>('news-video-popup',viewFactory_NewsVideoPopup_Host0,import3.NewsVideoPopup);
const styles_NewsVideoPopup:any[] = [];
var renderType_NewsVideoPopup:import0.RenderComponentType = (null as any);
class _View_NewsVideoPopup0 extends import1.AppView<import3.NewsVideoPopup> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_NewsVideoPopup0,renderType_NewsVideoPopup,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','show-video-popup');
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','video-container');
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'iframe',(null as any));
    this._text_5 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.context.sanitizer.bypassSecurityTrustResourceUrl(this.context.activeVideoUrl);
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_4,'src',this.viewUtils.sanitizer.sanitize(import11.SecurityContext.RESOURCE_URL,currVal_1));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.closePopup()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_NewsVideoPopup0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.NewsVideoPopup> {
  if ((renderType_NewsVideoPopup === (null as any))) { (renderType_NewsVideoPopup = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_NewsVideoPopup,{})); }
  return new _View_NewsVideoPopup0(viewUtils,parentInjector,declarationEl);
}